name: Build and Publish Services

on:
  workflow_call:
    inputs:
      services:
        required: true
        type: string
    secrets:
      aws_account_id:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix: ${{fromJSON(inputs.services)}}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-central-1
      - name: Get service githash
        id: git
        run: |
          hash=$(git rev-list -1 ${{ github.ref }} -- ${{ matrix.service.dir }})
          echo "::set-output name=githash::$hash"
      - name: Check if commit is already on ECR
        id: image
        run: |
          set +e
          aws ecr describe-images --repository-name=pythonit/${{ matrix.service.name }} --image-ids=imageTag=${{ steps.git.outputs.githash }}
          if [[ $? == 0 ]]; then
            echo '::set-output name=image_exists::1'
          else
            echo '::set-output name=image_exists::0'
          fi
      - name: Login to Amazon ECR
        if: ${{ steps.image.outputs.image_exists == 0 }}
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        if: ${{ steps.image.outputs.image_exists == 0 }}
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        if: ${{ steps.image.outputs.image_exists == 0 }}
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.service.name }}
      - name: Build and push
        if: ${{ steps.image.outputs.image_exists == 0 }}
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service.dir }}
          file: ./${{ matrix.service.dir }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.aws_account_id }}.dkr.ecr.eu-central-1.amazonaws.com/pythonit/${{ matrix.service.name }}:${{ steps.git.outputs.githash }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
